//back-end

import { useState, useEffect } from "react";
import { useNavigate, useParams } from "react-router-dom";
import productRepository from "./services/productService";

const ProductForm = () => {
  const { id } = useParams(); // Récupère l'ID du produit à modifier
  const navigate = useNavigate();
  const [product, setProduct] = useState({
    name: "",
    price: "",
    size: "",
    sex: "female",
    description: "",
  });

  // Charger les infos du produit existant
  useEffect(() => {
    productRepository.getProductById(id)
      .then((response) => setProduct(response.data))
      .catch((error) => console.error("Erreur de chargement", error));
  }, [id]);

  const handleChange = (event) => {
    const { name, value } = event.target;
    setProduct((prevProduct) => ({ ...prevProduct, [name]: value }));
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    productRepository.updateProduct(id, product)
      .then(() => navigate(`/products/${id}`)) // Redirection vers les détails du produit
      .catch((error) => console.error("Erreur de mise à jour", error));
  };

  return (
    <>
      <h1>Ajouter le produit</h1>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          name="name"
          placeholder="Nom"
          value={product.name}
          onChange={handleChange}
          required
        />
        <input
          type="number"
          name="price"
          placeholder="Prix"
          value={product.price}
          onChange={handleChange}
          required
        />
        <input
          type="text"
          name="size"
          placeholder="Taille"
          value={product.size}
          onChange={handleChange}
        />
        <select name="sex" value={product.sex} onChange={handleChange}>
          <option value="male">Homme</option>
          <option value="female">Femme</option>
          <option value="other">Autre</option>
        </select>
        <textarea
          name="description"
          placeholder="Description"
          value={product.description}
          onChange={handleChange}
        />
        <button type="submit">Ajouter</button>
      </form>
    </>
  );
};

export default ProductForm;

//dans productRoutes.js

const express = require("express");
const router = express.Router();
const productController = require("../controllers/productController");

router.post("/", productController.createProduct);

module.exports = router;



//Dans productController.js

const productService = require("../services/productService");

exports.createProduct = async (req, res) => {
  try {
    const newProduct = await productService.createProduct(req.body);
    res.status(201).json(newProduct);
  } catch (error) {
    res.status(500).json({ error: "Erreur lors de la création du produit" });
  }
};



//dans productService.js

const productRepository = require("../repositories/productRepository");

exports.createProduct = async (productData) => {
  return await productRepository.createProduct(productData);
};



// Dans productRespository.js

const Product = require("../models/Product");

exports.createProduct = async (productData) => {
  const product = new Product(productData);
  return await product.save();
};


